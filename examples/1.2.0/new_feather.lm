// 内置模块
print(string::cat( "a", "b", "c" ))

// 模块导入
include random
print(random::random())

// 可选分号

// 访问索引
var arr = range(10)
print( arr[0] )

// 匿名函数+foreach
foreach(arr , |i,e| print(i, "=>", e) )

// 类型
print(typeof(arr))
print(to_string(print))

// 匿名结构体
var lambda_struct = {a=0, b=0}
print(lambda_struct)

// 无限循环
var i = 0
loop {
    print("lamina")
    i=i+1
    if i>10 {
        break
    }
}


struct Student{name = "Tom";age = 18;}

print(Student);

// 设置子项
Student.name = "Lucy"
// 获取子项
print(Student.name);

struct Dog { name = "",  init = do|n|{self.name = n},   bark = do{ print(self.name, "is barking") } }

// 从其他结构体创建新结构体
var my_dog = new(Dog)
my_dog.init("Tim")
my_dog.bark()

// 判断结构体是否相等
print(my_dog.__parent__)
print(same(Dog, my_dog.__parent__))
print(same(Dog, my_dog))